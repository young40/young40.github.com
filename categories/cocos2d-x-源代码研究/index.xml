<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cocos2d-X 源代码研究 on 杨世玲的博客</title>
    <link>http://localhost:8077/categories/cocos2d-x-%E6%BA%90%E4%BB%A3%E7%A0%81%E7%A0%94%E7%A9%B6/</link>
    <description>Recent content in Cocos2d-X 源代码研究 on 杨世玲的博客</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <copyright>杨世玲</copyright>
    <lastBuildDate>Thu, 03 Jan 2013 15:09:00 +0800</lastBuildDate>
    <atom:link href="http://localhost:8077/categories/cocos2d-x-%E6%BA%90%E4%BB%A3%E7%A0%81%E7%A0%94%E7%A9%B6/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>2d-x深读4:CCAutoReleasePool</title>
      <link>http://localhost:8077/post/2013-01-03-cocos2d-x-source-code-research-4-ccautoreleasepool/</link>
      <pubDate>Thu, 03 Jan 2013 15:09:00 +0800</pubDate>
      <guid>http://localhost:8077/post/2013-01-03-cocos2d-x-source-code-research-4-ccautoreleasepool/</guid>
      <description>&lt;p&gt;&lt;code&gt;CCAutoReleasePool.h&lt;/code&gt;主要定义了两个类&lt;code&gt;CCAutoReleasePool&lt;/code&gt;和&lt;code&gt;CCPoolManager&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;其实因为cocos2d-x自动管理内存的原因, 所以, 我们平时很少需要直接使用这两个类. &lt;br&gt;&#xA;为了探究其中的自动管理内存的机制, 我们直接分析其代码.&lt;/p&gt;&#xA;&lt;p&gt;总体上来讲, 内存管理这块的机制难度或许比较大. 我研究了一天, 还是有诸多疑问. &lt;br&gt;&#xA;暂时先放一放, 待我功力进化后再来继续研究这块.&lt;/p&gt;</description>
    </item>
    <item>
      <title>2d-x深读3:CCObject</title>
      <link>http://localhost:8077/post/2012-12-31-cocos2d-x-source-code-research-3-ccobject/</link>
      <pubDate>Mon, 31 Dec 2012 17:21:00 +0800</pubDate>
      <guid>http://localhost:8077/post/2012-12-31-cocos2d-x-source-code-research-3-ccobject/</guid>
      <description>&lt;p&gt;CCObject是绝大部分cocos2d-x类的基类, 我们就从这里一步一步揭开cocos2d-x的奥秘.&lt;/p&gt;&#xA;&lt;p&gt;CCObject承担了两个重要的功能, 拷贝机制和内存管理.&lt;/p&gt;&#xA;&lt;p&gt;##拷贝机制&#xA;打开&lt;code&gt;CCObject.h&lt;/code&gt; 首先看到的是类CCCopying, 而CCObject是从该类派生. 从这个意义上来讲CCCopying才是大部分类的基类.&lt;br&gt;&#xA;但CCCopying其实非常简单, 再加上没有其他类从CCCopying派生, 所以说CCObject才是大部分类的基类也是不错的. 我认为CCCopying仅仅是一个接口性质.&lt;/p&gt;&#xA;&lt;p&gt;CCCopying这个类非常简单, 只有一个成员函数copyWithZone(CCZone *pZone); 简单到其实现只是为了报错. 尽管如此, 但其却承担了拷贝机制这一重要的功能.&lt;/p&gt;&#xA;&lt;p&gt;cocos2d-x和cocos2d-iphone是近亲, 所以cocos2d-x在API上会和cocos2d-iphone保持一致, 代码上也多有借鉴. CCObject明显就有很多NSObject的痕迹.&#xA;当然我对Objective-c并不熟悉, 这里都是些猜测罢了. copyWithZone或许就是借鉴了Obj-c.&lt;/p&gt;&#xA;&lt;p&gt;我们先来看下拷贝机制, 至于CCObject的代码倒不忙着看.&lt;/p&gt;</description>
    </item>
    <item>
      <title>2d-x深读2:CCPlatformMacros.h</title>
      <link>http://localhost:8077/post/2012-12-17-cocos2d-x-source-code-research-2-ccplatformmacros-dot-h/</link>
      <pubDate>Mon, 17 Dec 2012 01:49:00 +0800</pubDate>
      <guid>http://localhost:8077/post/2012-12-17-cocos2d-x-source-code-research-2-ccplatformmacros-dot-h/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;路径:&lt;code&gt;cocos2d-2.1beta3-x-2.1.0/cocos2dx/include/ccConfig.h&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;路径:&lt;code&gt;cocos2d-2.1beta3-x-2.1.0/cocos2dx/platform/mac/CCPlatformDefine.h&lt;/code&gt; //注意我是以mac平台研究的, 其他平台略有不同&lt;/li&gt;&#xA;&lt;li&gt;路径:&lt;code&gt;cocos2d-2.1beta3-x-2.1.0/cocos2dx/platform/CCPlatformMacros.h&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>2d-x深读1:CCPlatformConfig.h</title>
      <link>http://localhost:8077/post/2012-12-17-cocos2d-x-source-code-research-1-ccplatformconfig-dot-h/</link>
      <pubDate>Mon, 17 Dec 2012 00:43:00 +0800</pubDate>
      <guid>http://localhost:8077/post/2012-12-17-cocos2d-x-source-code-research-1-ccplatformconfig-dot-h/</guid>
      <description>&lt;p&gt;准备好好学习下Cocos2d-x(以下简称2dx), 我正在很努力地学习C++.&lt;/p&gt;&#xA;&lt;p&gt;作为新手的我, 只能从最基本的代码读起. 就从&lt;code&gt;CCPlatformConfig.h&lt;/code&gt;开始研究起吧, 这个文件没有include其他文件, 是最基本的文件.&lt;/p&gt;&#xA;&lt;p&gt;研究成果见代码.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
